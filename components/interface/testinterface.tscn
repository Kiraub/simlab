[gd_scene load_steps=2 format=2]

[sub_resource type="GDScript" id=1]
script/source = "extends VBoxContainer

var wrapped : ConfigWrapper
var gui_config : GridContainer

var number : int

func _init():
	wrapped = ConfigWrapper.new(\"TestInterface\")
	var entry = {
		ConfigWrapper.CONFIG_FIELDS[0] : \"hellow\",
		ConfigWrapper.CONFIG_FIELDS[1] : 0,
		ConfigWrapper.CONFIG_FIELDS[2] : \"hellow_changed\"
	}
	wrapped.add_config_entry(\"hellow\", entry)
	wrapped.connect(\"hellow_changed\", self, \"_on_hellow_changed\")
	print_debug(wrapped, \":::\", wrapped.title)

func _ready():
	gui_config = wrapped.create_gui_configuration()
	add_child(gui_config)
	gui_config.set_owner(self)
	for key in wrapped.configurable:
		var signal_name = wrapped.configurable[key].signal_name
		var _r = wrapped.connect(signal_name, self, \"_on_config_value_changed\", [key])

func _on_config_value_changed(old_value, new_value, key):
	print_debug(\"Config value changed of key:\", key, \"::\", old_value, \" => \", new_value)

func _on_hellow_changed(_old_value, new_value):
	print_debug(\"Number updated\")
	number = new_value
"

[node name="Control" type="VBoxContainer"]
anchor_right = 1.0
anchor_bottom = 1.0
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
